// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: pb/worker.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AcquireTimeArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster []byte `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *AcquireTimeArgs) Reset() {
	*x = AcquireTimeArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireTimeArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireTimeArgs) ProtoMessage() {}

func (x *AcquireTimeArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireTimeArgs.ProtoReflect.Descriptor instead.
func (*AcquireTimeArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{0}
}

func (x *AcquireTimeArgs) GetCluster() []byte {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type AcquireTimeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times []int64 `protobuf:"varint,1,rep,packed,name=times,proto3" json:"times,omitempty"`
}

func (x *AcquireTimeReply) Reset() {
	*x = AcquireTimeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcquireTimeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireTimeReply) ProtoMessage() {}

func (x *AcquireTimeReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireTimeReply.ProtoReflect.Descriptor instead.
func (*AcquireTimeReply) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{1}
}

func (x *AcquireTimeReply) GetTimes() []int64 {
	if x != nil {
		return x.Times
	}
	return nil
}

type ResultPersistArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dc     int32 `protobuf:"varint,1,opt,name=dc,proto3" json:"dc,omitempty"`
	Time   int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Direct bool  `protobuf:"varint,3,opt,name=direct,proto3" json:"direct,omitempty"`
}

func (x *ResultPersistArgs) Reset() {
	*x = ResultPersistArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPersistArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPersistArgs) ProtoMessage() {}

func (x *ResultPersistArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPersistArgs.ProtoReflect.Descriptor instead.
func (*ResultPersistArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{2}
}

func (x *ResultPersistArgs) GetDc() int32 {
	if x != nil {
		return x.Dc
	}
	return 0
}

func (x *ResultPersistArgs) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ResultPersistArgs) GetDirect() bool {
	if x != nil {
		return x.Direct
	}
	return false
}

type SinceInferDateArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromDate int64 `protobuf:"varint,1,opt,name=fromDate,proto3" json:"fromDate,omitempty"`
	ToDate   int64 `protobuf:"varint,2,opt,name=toDate,proto3" json:"toDate,omitempty"`
}

func (x *SinceInferDateArgs) Reset() {
	*x = SinceInferDateArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SinceInferDateArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinceInferDateArgs) ProtoMessage() {}

func (x *SinceInferDateArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinceInferDateArgs.ProtoReflect.Descriptor instead.
func (*SinceInferDateArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{3}
}

func (x *SinceInferDateArgs) GetFromDate() int64 {
	if x != nil {
		return x.FromDate
	}
	return 0
}

func (x *SinceInferDateArgs) GetToDate() int64 {
	if x != nil {
		return x.ToDate
	}
	return 0
}

type SinceInferDateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dates []int64 `protobuf:"varint,1,rep,packed,name=dates,proto3" json:"dates,omitempty"`
}

func (x *SinceInferDateReply) Reset() {
	*x = SinceInferDateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SinceInferDateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinceInferDateReply) ProtoMessage() {}

func (x *SinceInferDateReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinceInferDateReply.ProtoReflect.Descriptor instead.
func (*SinceInferDateReply) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{4}
}

func (x *SinceInferDateReply) GetDates() []int64 {
	if x != nil {
		return x.Dates
	}
	return nil
}

type SinceInferArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dc     int32   `protobuf:"varint,1,opt,name=dc,proto3" json:"dc,omitempty"`
	Dates  []int64 `protobuf:"varint,2,rep,packed,name=dates,proto3" json:"dates,omitempty"`
	Direct bool    `protobuf:"varint,3,opt,name=direct,proto3" json:"direct,omitempty"`
}

func (x *SinceInferArgs) Reset() {
	*x = SinceInferArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SinceInferArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinceInferArgs) ProtoMessage() {}

func (x *SinceInferArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinceInferArgs.ProtoReflect.Descriptor instead.
func (*SinceInferArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{5}
}

func (x *SinceInferArgs) GetDc() int32 {
	if x != nil {
		return x.Dc
	}
	return 0
}

func (x *SinceInferArgs) GetDates() []int64 {
	if x != nil {
		return x.Dates
	}
	return nil
}

func (x *SinceInferArgs) GetDirect() bool {
	if x != nil {
		return x.Direct
	}
	return false
}

type RepairAggrArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vc []byte `protobuf:"bytes,1,opt,name=vc,proto3" json:"vc,omitempty"`
}

func (x *RepairAggrArgs) Reset() {
	*x = RepairAggrArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairAggrArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairAggrArgs) ProtoMessage() {}

func (x *RepairAggrArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairAggrArgs.ProtoReflect.Descriptor instead.
func (*RepairAggrArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{6}
}

func (x *RepairAggrArgs) GetVc() []byte {
	if x != nil {
		return x.Vc
	}
	return nil
}

type SizeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *SizeMessage) Reset() {
	*x = SizeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SizeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeMessage) ProtoMessage() {}

func (x *SizeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SizeMessage.ProtoReflect.Descriptor instead.
func (*SizeMessage) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{7}
}

func (x *SizeMessage) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Cluster64Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster []byte `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *Cluster64Message) Reset() {
	*x = Cluster64Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster64Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster64Message) ProtoMessage() {}

func (x *Cluster64Message) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster64Message.ProtoReflect.Descriptor instead.
func (*Cluster64Message) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{8}
}

func (x *Cluster64Message) GetCluster() []byte {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type ConflictDetectResultReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DcId  []int32 `protobuf:"varint,1,rep,packed,name=dcId,proto3" json:"dcId,omitempty"`
	CCnt  []int32 `protobuf:"varint,2,rep,packed,name=cCnt,proto3" json:"cCnt,omitempty"`
	Total int32   `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ConflictDetectResultReply) Reset() {
	*x = ConflictDetectResultReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConflictDetectResultReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConflictDetectResultReply) ProtoMessage() {}

func (x *ConflictDetectResultReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConflictDetectResultReply.ProtoReflect.Descriptor instead.
func (*ConflictDetectResultReply) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{9}
}

func (x *ConflictDetectResultReply) GetDcId() []int32 {
	if x != nil {
		return x.DcId
	}
	return nil
}

func (x *ConflictDetectResultReply) GetCCnt() []int32 {
	if x != nil {
		return x.CCnt
	}
	return nil
}

func (x *ConflictDetectResultReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RBBalanceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distrib map[uint64]int32 `protobuf:"bytes,1,rep,name=distrib,proto3" json:"distrib,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *RBBalanceReply) Reset() {
	*x = RBBalanceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBBalanceReply) ProtoMessage() {}

func (x *RBBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBBalanceReply.ProtoReflect.Descriptor instead.
func (*RBBalanceReply) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{10}
}

func (x *RBBalanceReply) GetDistrib() map[uint64]int32 {
	if x != nil {
		return x.Distrib
	}
	return nil
}

type RBBalanceWorkloadArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allocate map[uint64]int32 `protobuf:"bytes,1,rep,name=allocate,proto3" json:"allocate,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *RBBalanceWorkloadArgs) Reset() {
	*x = RBBalanceWorkloadArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBBalanceWorkloadArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBBalanceWorkloadArgs) ProtoMessage() {}

func (x *RBBalanceWorkloadArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBBalanceWorkloadArgs.ProtoReflect.Descriptor instead.
func (*RBBalanceWorkloadArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{11}
}

func (x *RBBalanceWorkloadArgs) GetAllocate() map[uint64]int32 {
	if x != nil {
		return x.Allocate
	}
	return nil
}

type CBFilterArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table   string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Consts  []string `protobuf:"bytes,2,rep,name=consts,proto3" json:"consts,omitempty"`
	ColName string   `protobuf:"bytes,3,opt,name=colName,proto3" json:"colName,omitempty"`
	Op      string   `protobuf:"bytes,4,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *CBFilterArgs) Reset() {
	*x = CBFilterArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CBFilterArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBFilterArgs) ProtoMessage() {}

func (x *CBFilterArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBFilterArgs.ProtoReflect.Descriptor instead.
func (*CBFilterArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{12}
}

func (x *CBFilterArgs) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *CBFilterArgs) GetConsts() []string {
	if x != nil {
		return x.Consts
	}
	return nil
}

func (x *CBFilterArgs) GetColName() string {
	if x != nil {
		return x.ColName
	}
	return ""
}

func (x *CBFilterArgs) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

type RBFilterArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table    string   `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	ColName  []string `protobuf:"bytes,2,rep,name=colName,proto3" json:"colName,omitempty"`
	Constant []string `protobuf:"bytes,3,rep,name=constant,proto3" json:"constant,omitempty"`
	Op       []string `protobuf:"bytes,4,rep,name=op,proto3" json:"op,omitempty"`
	Set      []byte   `protobuf:"bytes,5,opt,name=set,proto3" json:"set,omitempty"`
}

func (x *RBFilterArgs) Reset() {
	*x = RBFilterArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RBFilterArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RBFilterArgs) ProtoMessage() {}

func (x *RBFilterArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RBFilterArgs.ProtoReflect.Descriptor instead.
func (*RBFilterArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{13}
}

func (x *RBFilterArgs) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *RBFilterArgs) GetColName() []string {
	if x != nil {
		return x.ColName
	}
	return nil
}

func (x *RBFilterArgs) GetConstant() []string {
	if x != nil {
		return x.Constant
	}
	return nil
}

func (x *RBFilterArgs) GetOp() []string {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *RBFilterArgs) GetSet() []byte {
	if x != nil {
		return x.Set
	}
	return nil
}

type FilterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ans [][]byte `protobuf:"bytes,1,rep,name=ans,proto3" json:"ans,omitempty"`
}

func (x *FilterReply) Reset() {
	*x = FilterReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterReply) ProtoMessage() {}

func (x *FilterReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterReply.ProtoReflect.Descriptor instead.
func (*FilterReply) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{14}
}

func (x *FilterReply) GetAns() [][]byte {
	if x != nil {
		return x.Ans
	}
	return nil
}

type BalanceArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentPlanId int32 `protobuf:"varint,1,opt,name=parentPlanId,proto3" json:"parentPlanId,omitempty"`
}

func (x *BalanceArgs) Reset() {
	*x = BalanceArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceArgs) ProtoMessage() {}

func (x *BalanceArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceArgs.ProtoReflect.Descriptor instead.
func (*BalanceArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{15}
}

func (x *BalanceArgs) GetParentPlanId() int32 {
	if x != nil {
		return x.ParentPlanId
	}
	return 0
}

type CBBalanceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkLoad int32 `protobuf:"varint,1,opt,name=workLoad,proto3" json:"workLoad,omitempty"`
}

func (x *CBBalanceReply) Reset() {
	*x = CBBalanceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CBBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBBalanceReply) ProtoMessage() {}

func (x *CBBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBBalanceReply.ProtoReflect.Descriptor instead.
func (*CBBalanceReply) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{16}
}

func (x *CBBalanceReply) GetWorkLoad() int32 {
	if x != nil {
		return x.WorkLoad
	}
	return 0
}

type TableCheckArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table       string           `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	ColumnsType map[string]int32 `protobuf:"bytes,2,rep,name=columnsType,proto3" json:"columnsType,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Sep         string           `protobuf:"bytes,3,opt,name=sep,proto3" json:"sep,omitempty"`
	Peers       []string         `protobuf:"bytes,4,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *TableCheckArgs) Reset() {
	*x = TableCheckArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableCheckArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableCheckArgs) ProtoMessage() {}

func (x *TableCheckArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableCheckArgs.ProtoReflect.Descriptor instead.
func (*TableCheckArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{17}
}

func (x *TableCheckArgs) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *TableCheckArgs) GetColumnsType() map[string]int32 {
	if x != nil {
		return x.ColumnsType
	}
	return nil
}

func (x *TableCheckArgs) GetSep() string {
	if x != nil {
		return x.Sep
	}
	return ""
}

func (x *TableCheckArgs) GetPeers() []string {
	if x != nil {
		return x.Peers
	}
	return nil
}

type TableCheckReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *TableCheckReply) Reset() {
	*x = TableCheckReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableCheckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableCheckReply) ProtoMessage() {}

func (x *TableCheckReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableCheckReply.ProtoReflect.Descriptor instead.
func (*TableCheckReply) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{18}
}

func (x *TableCheckReply) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type ColumnStatisArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column string `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *ColumnStatisArgs) Reset() {
	*x = ColumnStatisArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnStatisArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnStatisArgs) ProtoMessage() {}

func (x *ColumnStatisArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnStatisArgs.ProtoReflect.Descriptor instead.
func (*ColumnStatisArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{19}
}

func (x *ColumnStatisArgs) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

type ColumnStatisReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Histogram []byte `protobuf:"bytes,1,opt,name=histogram,proto3" json:"histogram,omitempty"`
}

func (x *ColumnStatisReply) Reset() {
	*x = ColumnStatisReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnStatisReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnStatisReply) ProtoMessage() {}

func (x *ColumnStatisReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnStatisReply.ProtoReflect.Descriptor instead.
func (*ColumnStatisReply) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{20}
}

func (x *ColumnStatisReply) GetHistogram() []byte {
	if x != nil {
		return x.Histogram
	}
	return nil
}

type PushLPArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans [][]byte `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *PushLPArgs) Reset() {
	*x = PushLPArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushLPArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushLPArgs) ProtoMessage() {}

func (x *PushLPArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushLPArgs.ProtoReflect.Descriptor instead.
func (*PushLPArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{21}
}

func (x *PushLPArgs) GetPlans() [][]byte {
	if x != nil {
		return x.Plans
	}
	return nil
}

type PullDataArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table  string `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	RowsId []byte `protobuf:"bytes,2,opt,name=rowsId,proto3" json:"rowsId,omitempty"`
}

func (x *PullDataArgs) Reset() {
	*x = PullDataArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullDataArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullDataArgs) ProtoMessage() {}

func (x *PullDataArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullDataArgs.ProtoReflect.Descriptor instead.
func (*PullDataArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{22}
}

func (x *PullDataArgs) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *PullDataArgs) GetRowsId() []byte {
	if x != nil {
		return x.RowsId
	}
	return nil
}

type PullDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PullDataReply) Reset() {
	*x = PullDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullDataReply) ProtoMessage() {}

func (x *PullDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullDataReply.ProtoReflect.Descriptor instead.
func (*PullDataReply) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{23}
}

func (x *PullDataReply) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type CBBalanceWorkloadArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delivery []int32 `protobuf:"varint,1,rep,packed,name=delivery,proto3" json:"delivery,omitempty"`
	ParentId int32   `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
}

func (x *CBBalanceWorkloadArgs) Reset() {
	*x = CBBalanceWorkloadArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CBBalanceWorkloadArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBBalanceWorkloadArgs) ProtoMessage() {}

func (x *CBBalanceWorkloadArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBBalanceWorkloadArgs.ProtoReflect.Descriptor instead.
func (*CBBalanceWorkloadArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{24}
}

func (x *CBBalanceWorkloadArgs) GetDelivery() []int32 {
	if x != nil {
		return x.Delivery
	}
	return nil
}

func (x *CBBalanceWorkloadArgs) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type PushCandidatesArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key uint64 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Val []byte `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *PushCandidatesArgs) Reset() {
	*x = PushCandidatesArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushCandidatesArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushCandidatesArgs) ProtoMessage() {}

func (x *PushCandidatesArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushCandidatesArgs.ProtoReflect.Descriptor instead.
func (*PushCandidatesArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{25}
}

func (x *PushCandidatesArgs) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *PushCandidatesArgs) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

type RepairArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender []byte `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *RepairArgs) Reset() {
	*x = RepairArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairArgs) ProtoMessage() {}

func (x *RepairArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairArgs.ProtoReflect.Descriptor instead.
func (*RepairArgs) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{26}
}

func (x *RepairArgs) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

type RepairReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Se []byte `protobuf:"bytes,1,opt,name=se,proto3" json:"se,omitempty"`
	Rv []byte `protobuf:"bytes,2,opt,name=rv,proto3" json:"rv,omitempty"`
}

func (x *RepairReply) Reset() {
	*x = RepairReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_worker_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepairReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepairReply) ProtoMessage() {}

func (x *RepairReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_worker_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepairReply.ProtoReflect.Descriptor instead.
func (*RepairReply) Descriptor() ([]byte, []int) {
	return file_pb_worker_proto_rawDescGZIP(), []int{27}
}

func (x *RepairReply) GetSe() []byte {
	if x != nil {
		return x.Se
	}
	return nil
}

func (x *RepairReply) GetRv() []byte {
	if x != nil {
		return x.Rv
	}
	return nil
}

var File_pb_worker_proto protoreflect.FileDescriptor

var file_pb_worker_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0f, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x28, 0x0a, 0x10, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x64, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x22, 0x48, 0x0a, 0x12, 0x53, 0x69,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x2b, 0x0a, 0x13, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x22, 0x4e, 0x0a, 0x0e, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x64, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x22, 0x20, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x41, 0x67, 0x67, 0x72, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x76, 0x63, 0x22, 0x21, 0x0a, 0x0b, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x2c, 0x0a, 0x10, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x36, 0x34, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x04, 0x64, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x04, 0x63, 0x43, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x87, 0x01, 0x0a, 0x0e, 0x52, 0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x1a, 0x3a, 0x0a,
	0x0c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x99, 0x01, 0x0a, 0x15, 0x52, 0x42,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x43, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x42, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x67, 0x73,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x66, 0x0a, 0x0c, 0x43, 0x42, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x7c, 0x0a,
	0x0c, 0x52, 0x42, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x65, 0x74, 0x22, 0x1f, 0x0a, 0x0b, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x61, 0x6e, 0x73, 0x22, 0x31, 0x0a, 0x0b,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22,
	0x2c, 0x0a, 0x0e, 0x43, 0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x61, 0x64, 0x22, 0xd5, 0x01,
	0x0a, 0x0e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x2e,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x65, 0x65, 0x72, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x27, 0x0a, 0x0f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x2a,
	0x0a, 0x10, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x31, 0x0a, 0x11, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x22, 0x22, 0x0a,
	0x0a, 0x50, 0x75, 0x73, 0x68, 0x4c, 0x50, 0x41, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e,
	0x73, 0x22, 0x3c, 0x0a, 0x0c, 0x50, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x77, 0x73, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x6f, 0x77, 0x73, 0x49, 0x64, 0x22,
	0x23, 0x0a, 0x0d, 0x50, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a, 0x15, 0x43, 0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x24, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x72, 0x76, 0x32, 0xe5, 0x0d, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12,
	0x37, 0x0a, 0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x43, 0x42, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x42, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x52,
	0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x43, 0x42, 0x4c, 0x50, 0x12, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x4c, 0x50, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x52, 0x42, 0x4c,
	0x50, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4c, 0x50, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x11, 0x43,
	0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x11, 0x52, 0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x33, 0x0a, 0x08, 0x50, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x2f, 0x0a, 0x08, 0x43, 0x42,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x42, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x08, 0x52,
	0x42, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x42, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x11, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x53, 0x69, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x0a, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x41, 0x63, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x49,
	0x6e, 0x69, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x42, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x50, 0x75, 0x73, 0x68,
	0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x3c,
	0x0a, 0x0a, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x36, 0x34, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x11,
	0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x36, 0x34,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x41, 0x67, 0x67, 0x72, 0x12,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x69, 0x72, 0x41, 0x67, 0x67, 0x72, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a,
	0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x08, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e,
	0x67, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09,
	0x45, 0x63, 0x63, 0x44, 0x63, 0x72, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pb_worker_proto_rawDescOnce sync.Once
	file_pb_worker_proto_rawDescData = file_pb_worker_proto_rawDesc
)

func file_pb_worker_proto_rawDescGZIP() []byte {
	file_pb_worker_proto_rawDescOnce.Do(func() {
		file_pb_worker_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_worker_proto_rawDescData)
	})
	return file_pb_worker_proto_rawDescData
}

var file_pb_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_pb_worker_proto_goTypes = []interface{}{
	(*AcquireTimeArgs)(nil),           // 0: pb.AcquireTimeArgs
	(*AcquireTimeReply)(nil),          // 1: pb.AcquireTimeReply
	(*ResultPersistArgs)(nil),         // 2: pb.ResultPersistArgs
	(*SinceInferDateArgs)(nil),        // 3: pb.SinceInferDateArgs
	(*SinceInferDateReply)(nil),       // 4: pb.SinceInferDateReply
	(*SinceInferArgs)(nil),            // 5: pb.SinceInferArgs
	(*RepairAggrArgs)(nil),            // 6: pb.RepairAggrArgs
	(*SizeMessage)(nil),               // 7: pb.SizeMessage
	(*Cluster64Message)(nil),          // 8: pb.Cluster64Message
	(*ConflictDetectResultReply)(nil), // 9: pb.ConflictDetectResultReply
	(*RBBalanceReply)(nil),            // 10: pb.RBBalanceReply
	(*RBBalanceWorkloadArgs)(nil),     // 11: pb.RBBalanceWorkloadArgs
	(*CBFilterArgs)(nil),              // 12: pb.CBFilterArgs
	(*RBFilterArgs)(nil),              // 13: pb.RBFilterArgs
	(*FilterReply)(nil),               // 14: pb.FilterReply
	(*BalanceArgs)(nil),               // 15: pb.BalanceArgs
	(*CBBalanceReply)(nil),            // 16: pb.CBBalanceReply
	(*TableCheckArgs)(nil),            // 17: pb.TableCheckArgs
	(*TableCheckReply)(nil),           // 18: pb.TableCheckReply
	(*ColumnStatisArgs)(nil),          // 19: pb.ColumnStatisArgs
	(*ColumnStatisReply)(nil),         // 20: pb.ColumnStatisReply
	(*PushLPArgs)(nil),                // 21: pb.PushLPArgs
	(*PullDataArgs)(nil),              // 22: pb.PullDataArgs
	(*PullDataReply)(nil),             // 23: pb.PullDataReply
	(*CBBalanceWorkloadArgs)(nil),     // 24: pb.CBBalanceWorkloadArgs
	(*PushCandidatesArgs)(nil),        // 25: pb.PushCandidatesArgs
	(*RepairArgs)(nil),                // 26: pb.RepairArgs
	(*RepairReply)(nil),               // 27: pb.RepairReply
	nil,                               // 28: pb.RBBalanceReply.DistribEntry
	nil,                               // 29: pb.RBBalanceWorkloadArgs.AllocateEntry
	nil,                               // 30: pb.TableCheckArgs.ColumnsTypeEntry
	(*emptypb.Empty)(nil),             // 31: google.protobuf.Empty
}
var file_pb_worker_proto_depIdxs = []int32{
	28, // 0: pb.RBBalanceReply.distrib:type_name -> pb.RBBalanceReply.DistribEntry
	29, // 1: pb.RBBalanceWorkloadArgs.allocate:type_name -> pb.RBBalanceWorkloadArgs.AllocateEntry
	30, // 2: pb.TableCheckArgs.columnsType:type_name -> pb.TableCheckArgs.ColumnsTypeEntry
	17, // 3: pb.Worker.TableCheck:input_type -> pb.TableCheckArgs
	19, // 4: pb.Worker.ColumnStatis:input_type -> pb.ColumnStatisArgs
	15, // 5: pb.Worker.CBBalance:input_type -> pb.BalanceArgs
	15, // 6: pb.Worker.RBBalance:input_type -> pb.BalanceArgs
	21, // 7: pb.Worker.PushCBLP:input_type -> pb.PushLPArgs
	21, // 8: pb.Worker.PushRBLP:input_type -> pb.PushLPArgs
	24, // 9: pb.Worker.CBBalanceWorkload:input_type -> pb.CBBalanceWorkloadArgs
	11, // 10: pb.Worker.RBBalanceWorkload:input_type -> pb.RBBalanceWorkloadArgs
	25, // 11: pb.Worker.PushCandidates:input_type -> pb.PushCandidatesArgs
	22, // 12: pb.Worker.PullData:input_type -> pb.PullDataArgs
	12, // 13: pb.Worker.CBFilter:input_type -> pb.CBFilterArgs
	13, // 14: pb.Worker.RBFilter:input_type -> pb.RBFilterArgs
	31, // 15: pb.Worker.ConflictDetectResult:input_type -> google.protobuf.Empty
	31, // 16: pb.Worker.CloseService:input_type -> google.protobuf.Empty
	31, // 17: pb.Worker.BuildClusterIndex:input_type -> google.protobuf.Empty
	2,  // 18: pb.Worker.ResultPersist:input_type -> pb.ResultPersistArgs
	3,  // 19: pb.Worker.SinceInferDate:input_type -> pb.SinceInferDateArgs
	5,  // 20: pb.Worker.SinceInfer:input_type -> pb.SinceInferArgs
	0,  // 21: pb.Worker.AcquireTime:input_type -> pb.AcquireTimeArgs
	31, // 22: pb.Worker.RepairInit:input_type -> google.protobuf.Empty
	31, // 23: pb.Worker.RepairBalance:input_type -> google.protobuf.Empty
	24, // 24: pb.Worker.RepairBalanceWorkload:input_type -> pb.CBBalanceWorkloadArgs
	25, // 25: pb.Worker.RepairPushCandidates:input_type -> pb.PushCandidatesArgs
	8,  // 26: pb.Worker.RepairTurn:input_type -> pb.Cluster64Message
	8,  // 27: pb.Worker.RepairVertexCover:input_type -> pb.Cluster64Message
	6,  // 28: pb.Worker.RepairAggr:input_type -> pb.RepairAggrArgs
	31, // 29: pb.Worker.TableSize:input_type -> google.protobuf.Empty
	7,  // 30: pb.Worker.Sampling:input_type -> pb.SizeMessage
	18, // 31: pb.Worker.TableCheck:output_type -> pb.TableCheckReply
	20, // 32: pb.Worker.ColumnStatis:output_type -> pb.ColumnStatisReply
	16, // 33: pb.Worker.CBBalance:output_type -> pb.CBBalanceReply
	10, // 34: pb.Worker.RBBalance:output_type -> pb.RBBalanceReply
	31, // 35: pb.Worker.PushCBLP:output_type -> google.protobuf.Empty
	31, // 36: pb.Worker.PushRBLP:output_type -> google.protobuf.Empty
	31, // 37: pb.Worker.CBBalanceWorkload:output_type -> google.protobuf.Empty
	31, // 38: pb.Worker.RBBalanceWorkload:output_type -> google.protobuf.Empty
	31, // 39: pb.Worker.PushCandidates:output_type -> google.protobuf.Empty
	23, // 40: pb.Worker.PullData:output_type -> pb.PullDataReply
	14, // 41: pb.Worker.CBFilter:output_type -> pb.FilterReply
	14, // 42: pb.Worker.RBFilter:output_type -> pb.FilterReply
	9,  // 43: pb.Worker.ConflictDetectResult:output_type -> pb.ConflictDetectResultReply
	31, // 44: pb.Worker.CloseService:output_type -> google.protobuf.Empty
	31, // 45: pb.Worker.BuildClusterIndex:output_type -> google.protobuf.Empty
	31, // 46: pb.Worker.ResultPersist:output_type -> google.protobuf.Empty
	4,  // 47: pb.Worker.SinceInferDate:output_type -> pb.SinceInferDateReply
	31, // 48: pb.Worker.SinceInfer:output_type -> google.protobuf.Empty
	1,  // 49: pb.Worker.AcquireTime:output_type -> pb.AcquireTimeReply
	31, // 50: pb.Worker.RepairInit:output_type -> google.protobuf.Empty
	16, // 51: pb.Worker.RepairBalance:output_type -> pb.CBBalanceReply
	31, // 52: pb.Worker.RepairBalanceWorkload:output_type -> google.protobuf.Empty
	31, // 53: pb.Worker.RepairPushCandidates:output_type -> google.protobuf.Empty
	31, // 54: pb.Worker.RepairTurn:output_type -> google.protobuf.Empty
	31, // 55: pb.Worker.RepairVertexCover:output_type -> google.protobuf.Empty
	31, // 56: pb.Worker.RepairAggr:output_type -> google.protobuf.Empty
	7,  // 57: pb.Worker.TableSize:output_type -> pb.SizeMessage
	31, // 58: pb.Worker.Sampling:output_type -> google.protobuf.Empty
	31, // [31:59] is the sub-list for method output_type
	3,  // [3:31] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_pb_worker_proto_init() }
func file_pb_worker_proto_init() {
	if File_pb_worker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_worker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireTimeArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcquireTimeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultPersistArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SinceInferDateArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SinceInferDateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SinceInferArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairAggrArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SizeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster64Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConflictDetectResultReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBBalanceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBBalanceWorkloadArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CBFilterArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RBFilterArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CBBalanceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableCheckArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableCheckReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnStatisArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnStatisReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushLPArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullDataArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CBBalanceWorkloadArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushCandidatesArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_worker_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepairReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_worker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_worker_proto_goTypes,
		DependencyIndexes: file_pb_worker_proto_depIdxs,
		MessageInfos:      file_pb_worker_proto_msgTypes,
	}.Build()
	File_pb_worker_proto = out.File
	file_pb_worker_proto_rawDesc = nil
	file_pb_worker_proto_goTypes = nil
	file_pb_worker_proto_depIdxs = nil
}
